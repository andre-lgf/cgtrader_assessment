version: "3"

services:
  redis:
    image: "redis:7-alpine"
    container_name: redis
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - "redis:/data"

  assignment:
    container_name: api
    restart: unless-stopped
    depends_on:
      - redis
      - db
      - elasticsearch
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    volumes:
      - "./:/var/www"
    ports:
      - 3000:3000
    environment:
      - DATABASE_HOST=db
      - ELASTICSEARCH_URL=http://elasticsearch:9200

  db:
    image: 'postgres:15.2-alpine'
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust

  nginx:
    container_name: nginx
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    depends_on:
      - assignment
    ports:
      - 80:80
      - 443:443

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0-arm64
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
      xpack.security.enabled: false
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
      
  # kibana:
  #   restart: unless-stopped
  #   image: docker.elastic.co/kibana/kibana:8.7.0
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     ELASTICSEARCH_URL: http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch

volumes:
  redis:
  postgres:
  esdata:
    driver: local
